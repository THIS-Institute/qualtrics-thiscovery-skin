/* Qualtrics compensatory styling */

/*

Qualtrics codes:
    MC = Multiple Choice?

*/

/* radio buttons */

@mixin thiscovery-radio-button ($size) {
    color : var(--thisco-red);
    border-radius: 50%; // round
    width: $size;
    height: $size;
    // background-color: white;
    background-image: radial-gradient(circle at center, var(--thisco-red) 0%, var(--thisco-red) 50%, transparent 50%) !important;
    // background-image: radial-gradient(circle at center, red, green) !important;
    background-position: center !important;
    background-size: 0% 0% !important;
    background-repeat: no-repeat !important;
    border: ($size * .3) solid white;
    outline: ($size * .2) solid var(--thisco-red);
    display: block;
    transition: all .25s;
    box-sizing: content-box;
}

@mixin thiscovery-radio-button-checked () {
    // background-color: var(--thisco-red) !important; // Q forces hand
    background-color: transparent !important;
    background-size: 200% 200% !important;
}

$min-response-height: 2.6rem;
$radio-size: .6em;

/* basic question here for building on */

.Skin {

    #SkinContent {
        padding: 1rem;
    }

    .QuestionText, .QuestionBody {
        padding: 1rem;
        padding-top: 0;
    }

    .ChoiceStructure {
        li {
            // hide native - Q js handles events
            min-height: $min-response-height;
            // border-radius: 15px;
            // box-shadow: .5px .5px 0px rgb(0 0 0 / .1);
            padding: .4rem .3rem;
            margin-bottom: .6em;
            input[type="radio"] {
                width: 4px;
                height: 4px;
                opacity: 0;
                & + label {
                    display: none;
                }
            }
            .LabelWrapper {
                margin-left: 1rem;
                label.MultipleAnswer, label.SingleAnswer {
                    padding: 5px;
                    > span {
                        position: relative;
                        &:focus-visible {
                            &::before {
                                transform: scale(1.1);
                            }
                        }
                        &:active {
                            &::before {
                                transform: scale(0.9);
                            }
                        }
                    }
                    > span::before {
                        content: " ";
                        position: absolute;
                        left: -$radio-size * 2.4;
                        top:($radio-size * 0);
                        margin-top: 0;
                        @include thiscovery-radio-button($radio-size);
                    }
                    &.q-checked, &.q-checked.q-focused {
                        > span::before {
                            animation: none;
                            box-shadow: none;
                            @include thiscovery-radio-button($radio-size);
                            @include thiscovery-radio-button-checked();           
                        }
                    }
                }
            }
        }
    }


}