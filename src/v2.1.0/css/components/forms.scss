/* Qualtrics compensatory styling */

/*

Qualtrics codes:
    MC = Multiple Choice?

*/

// A map of breakpoints.
$breakpoints: (
  xs: 481px,
  sm: 768px,
  md: 980px,
  lg: 1400px,
);

//
//  RESPOND ABOVE
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include respond-above(sm) {}
@mixin respond-above($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.
  } @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

/* radio buttons */

@mixin thiscovery-radio-button ($size) {
    // color : var(--thisco-red);
    border-radius: 50%; // round
    width: $size;
    height: $size;
    // background-color: white;
    background-image: radial-gradient(circle at center, var(--thisco-red) 0%, var(--thisco-red) 50%, transparent 50%);
    // background-image: radial-gradient(circle at center, red, green) !important;
    background-position: center ;
    background-size: 0% 0%;
    background-repeat: no-repeat ;
    border: ($size * .3) solid white;
    // Safari does not support round outlines, so using box-shadow trick here
    box-shadow: 0px 0px 0px ($size * .2) var(--thisco-red);
    display: block;
    transition: all .15s ease-out;
    box-sizing: content-box;
    content: " ";
    position: absolute;
    left:($radio-size * 0.7);
    top:($radio-size * 1); // half line height?
    margin-top: 0.15em;
}

@mixin thiscovery-radio-button-checked () {
    // background-color: var(--thisco-red) !important; // Q forces hand
    background-color: transparent ;
    background-size: 200% 200% ;
}

// border-radius 0 for a checkbox

@mixin thiscovery-checkbox-checked-addition () {
    background-color: var(--thisco-red);
    background-image: url("data:image/svg+xml,%3Csvg width='100%25' height='100%25' viewBox='0 0 24 20' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' xml:space='preserve' xmlns:serif='http://www.serif.com/' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;'%3E%3Cpath id='check' d='M23.051,2.843l-14.151,15.977c-0.19,0.214 -0.463,0.337 -0.749,0.337c-0.275,0 -0.538,-0.113 -0.727,-0.313l-7.152,-7.573c-0.341,-0.361 -0.364,-0.924 -0.054,-1.311l0.952,-1.19c0.293,-0.367 0.808,-0.48 1.228,-0.27l5.277,2.639l12.797,-10.902c0.395,-0.336 0.989,-0.312 1.356,0.055l1.181,1.181c0.372,0.372 0.39,0.977 0.042,1.37Z' style='fill:%23fff;fill-rule:nonzero;'/%3E%3C/svg%3E");
    background-size: 110%;
    border-color: transparent;    
}

@mixin thisco-input () {
    // generic style for majority of types, override as necessary
    border-radius: 5px;
    border: 1px solid var(--thisco-light-grey);
    box-shadow: inset 1px 1px 3px rgb(0 0 0 / 0.1);
    font-weight: 400;
    padding-left: .2em;
    padding-right: .2em;
    &:focus-visible {
        border-color: var(--thisco-red);
        box-shadow: 0px 0px 0px 1px var(--thisco-red);
        outline: none;
    }
    &::placeholder {
        font-weight: 100;
        color: rgb(0 0 0 / 0.5);
    }
}

@mixin thisco-textarea () {
    @include thisco-input();
    width: 100%;
    resize: none;
    min-height: 6.2rem;
}

@mixin thisco-select() {
    background: white;
    border: 1px solid var(--thisco-light-grey);
    border-radius: 5px;
    font-size: 1em;
    padding: .2em .3em;
    max-width: 100%;
    min-width: 70%;
    appearance: none; // reject browser styling
    padding-right: 2em;
    background-image: url("data:image/svg+xml,%3Csvg width='100%25' height='100%25' viewBox='0 0 800 600' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' xml:space='preserve' xmlns:serif='http://www.serif.com/' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;'%3E%3Cg transform='matrix(1,6.12323e-17,-6.12323e-17,-0.5,2.06668e-14,475)'%3E%3Cpath d='M194.797,459.594L374.797,99.594C383.193,82.802 396.807,82.802 405.203,99.594L585.203,459.594C593.593,476.376 593.593,503.624 585.203,520.406C576.812,537.187 563.188,537.187 554.797,520.406C554.797,520.406 433.405,277.622 390,190.811C390,190.811 225.203,520.406 225.203,520.406C216.812,537.187 203.188,537.187 194.797,520.406C186.407,503.624 186.407,476.376 194.797,459.594Z'/%3E%3C/g%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right center;
    background-size: 1.4em;
    color:black;
}

$min-response-height: 2.6rem;
$radio-size: .6em;

$label-background: linear-gradient(45deg, transparent, rgb(0 0 0 / 0.05) 50%);

@mixin thisco-response-label () {
    min-height: $min-response-height;
    border-radius: 15px;
    // box-shadow: inset .5px .5px 0px rgb(0 0 0 / .05);
    background-color: rgb(0 0 0 / 0.01);
    background-image: $label-background;
    padding: .4rem .8rem;
    // margin-bottom: .6em;
    &:focus-within {
        outline : 2px solid white;
        box-shadow: 0px 0px 0px 4px crimson !important;           
    }
}

/* reformat QuestionBody etc for panel choices on fieldset (Qualtrics) */
@mixin thisco-panel-choices () {
    ul.ChoiceStructure {
        display: grid;
        grid-template-columns: 1fr;
        @include respond-above(xs) {
            grid-template-columns: 1fr 1fr;
        }
        grid-gap: 1rem;
        li {
            height: 100%;
            // background: none;
            padding: 0;
            overflow: hidden;
        }
        span.LabelWrapper {
            width:100%;
            height: 100%;
            margin: 0;
            label {
                display: flex;
                align-items: center;
                justify-content: center;
                height: 100%;
                // background-image: $label-background;
                &.q-checked {
                    background: var(--thisco-red);
                }
                > span {
                    line-height: 1;
                }
                > span:before {
                    display: none !important;
                }
            }
        }
    }
}

/* basic question here for building on */

.Skin {

    #SkinContent {
        padding: 1rem;
    }

    .QuestionText, .QuestionBody {
        padding: 1rem;
        padding-top: 0;
        display: block;
        > * {
            margin-bottom: 1.6em;
        }
        // > *:last-child {
        //     margin-bottom: 0;
        // }
    }

    fieldset > legend {
        // margin-bottom: 1.6em;
    }

    input {
        @include thisco-input();
    }

    select {
        @include thisco-select();
    }

    textarea {
        @include thisco-textarea();
    }

    ul.ChoiceStructure {
        padding-left: 1rem;
        padding-right: 1rem;
    }

    ul.ChoiceStructure, ul.ChoiceGroupStructure {

        > li:not(.ChoiceGroup) {
            @include thisco-response-label();
            // hide native - Q js handles events, clicks on whole li element *NOT* label as per standards
            min-height: $min-response-height;
            border-radius: 15px;
            // box-shadow: inset .5px .5px 0px rgb(0 0 0 / .05);
            padding: .4rem .8rem;
            margin-bottom: 1.2em;
            display: flex;
            transition: box-shadow .2s;
            &:hover {
                box-shadow: 1px 1px 5px rgb(0 0 0 / 0.1);
            }
            input[type="radio"], input[type="checkbox"] {
                width: 4px;
                height: 4px;
                opacity: 0;
                & + label {
                    display: none;
                }
                position: absolute;
            }
            .LabelWrapper {
                margin-left: 2rem;
                display: flex;
                justify-content: space-between;
                width: 100%;
                align-items: center;
                label.MultipleAnswer, label.SingleAnswer {
                    padding: 5px;
                    > span {
                        position: relative;
                        // color : var(--thisco-red);
                        &:focus-visible {
                            outline: none;
                            &::before {
                                transform: scale(1.1);
                            }
                        }
                        &:active {
                            &::before {
                                transform: scale(0.9);
                            }
                        }
                    }

                    > span::before {

                        @include thiscovery-radio-button($radio-size);
                        top:0px;
                        left: -$radio-size * 2.8;
                    }
                    &.q-checked, &.q-checked.q-focused {
                        > span::before {
                            animation: none;
                            box-shadow: none;
                            @include thiscovery-radio-button($radio-size);
                            @include thiscovery-radio-button-checked();
                            top:0px; 
                            left: -$radio-size * 2.8;          
                        }
                    }
                }
                label.MultipleAnswer {
                    > span::before {
                        border-radius: 0px;
                    }
                    &.q-checked, &.q-checked.q-focused {
                        > span::before {
                            border-radius: 0px;
                            background-color: var(--thisco-red);
                            background-image: url("data:image/svg+xml,%3Csvg width='100%25' height='100%25' viewBox='0 0 24 20' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' xml:space='preserve' xmlns:serif='http://www.serif.com/' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;'%3E%3Cpath id='check' d='M23.051,2.843l-14.151,15.977c-0.19,0.214 -0.463,0.337 -0.749,0.337c-0.275,0 -0.538,-0.113 -0.727,-0.313l-7.152,-7.573c-0.341,-0.361 -0.364,-0.924 -0.054,-1.311l0.952,-1.19c0.293,-0.367 0.808,-0.48 1.228,-0.27l5.277,2.639l12.797,-10.902c0.395,-0.336 0.989,-0.312 1.356,0.055l1.181,1.181c0.372,0.372 0.39,0.977 0.042,1.37Z' style='fill:%23fff;fill-rule:nonzero;'/%3E%3C/svg%3E");
                            background-size: 110%;
                            border-color: transparent;
                        }
                    }
                }
                input.TextEntryBox {
                    // margin-left: 5px;
                    margin-top: .4em;
                    margin-bottom: .4em;
                    flex: 50%;
                    height: 1.6em;
                }
            }
            input:not(:checked) ~ span {
                input {
                    color:rgb(0 0 0 / 0.3);
                }
            }
        }
        li.ChoiceGroup {
            margin-bottom: 1.2em;
            padding-top: 1.6em;
            font-weight: 400;
        }
        li:first-child.ChoiceGroup {
            padding-top: 0;
        }
    }

    div.ChoiceStructure {
        input[type="text"] {
            width: 90%;
        }
        // form fields
        table {
            width: 90%;
            margin-left: 5%;
            border-spacing : 1em .6em;
            border-collapse: separate;
            td.ControlContainer {
                vertical-align: middle;
            }
            tr > td:first-of-type {
                width: 30%;
            }
        }
    }

    fieldset.panel-choice {
        @include thisco-panel-choices();
    }

}

.thisco-survey {
    font-size: 16px;
    form {
        display: block;
        > p, > fieldset, > div {
            margin-bottom: 1.6em;
        }
        fieldset {
            legend {
                margin-bottom: 1.6em;
            }
            input[type="text"] {
                @include thisco-input();
            }
            input:not(:checked) + label {
                @include thisco-response-label();
                input {
                    color:rgb(0 0 0 / 0.3);
                }
            }
            label:not(.likert-label) {
                display: block;
                position: relative;
                @include thisco-response-label();

                > input {
                    // 'Other' inputs within labels
                    margin-left: .5em;
                    @include thisco-input();
                }
            }
            select {
                @include thisco-select();
            }
            textarea {
                @include thisco-textarea();
            }
            // basic multiple choice
            input {
                &[type="radio"]:not(.likert-input) ,&[type="checkbox"] {
                    opacity: 0;
                    width: 1px;
                    height: 1px;
                    & + label {
                        padding-left: 2.25rem;
                    }
                    & + label::before {
                        @include thiscovery-radio-button($radio-size);
                    }
                    &:checked + label::before {
                        @include thiscovery-radio-button-checked();
                    }
                }
                &[type="checkbox"] {
                    & + label::before {
                        border-radius: 0px;
                    }
                    &:checked + label::before {
                        @include thiscovery-checkbox-checked-addition();
                    }                
                }
            
            }
            // styling for collected form field inputs
            &.form-fields {
                display: grid;
                grid-template-columns: 1rem fit-content(30%) auto 1rem;
                grid-gap: .4em;
                align-items: center;
                legend {
                    grid-column: 1 / 4;
                }
                label, input:not(:checked) + label {
                    grid-column: 2 / 3;
                    text-align: right;
                    background: transparent;
                }
                input {
                    grid-column: 3 / 4;
                }
            }
        }
        .form-group {
            label {
                margin-bottom: 1.2em;
                display: block;
            }
            input {
                &[type="text"], &[type="email"], &[type="search"], &[type="url"], &[type="number"] {
                    @include thisco-input();
                }
            } 
            textarea {
                @include thisco-textarea();
            }
        }
    }
}

/* gen utility classes to share across components */

.thisco-response-label {
    @include thisco-response-label();
}