@use '../../v2.1.0/css/skin.scss';
@use './components/obs.scss';

// A map of breakpoints.
$breakpoints: (
  xs: 481px,
  sm: 768px,
  md: 980px,
  lg: 1400px,
);

//
//  RESPOND ABOVE
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include respond-above(sm) {}
@mixin respond-above($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.
  } @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

body {
    .curtain {
        #SkinContent {
            visibility: hidden !important;
        }
    }
    * {
        // outline: 1px dotted gray;
    }
}

/* Header, Footer externalisation etc */

.Skin  #HeaderContainer {
    display: none !important;
}

/* grid layout to help persistent panel - requires obs to be outside .JFEContent DOM, fixed, but follows an anchoring el */

$main-max-width : 768px;
$obs-width : 100px;

.JFEContent {
    display: grid;
    background-color: white;
    grid-template-columns: 0px auto 0rem 0px;
    > * {
        grid-column: 2 / 3;
    }
    > .thisco-obs-follow {
      grid-row : 1 / 2 ;
      grid-column: 1 / 2;
      @include respond-above(sm){
        grid-column: 3 / 4;
      }
      > a {
        opacity: 0;
      }
    }
    @include respond-above(sm) {
        grid-template-columns: 
            clamp(calc(50vw - ($main-max-width/2)), min(calc(50vw - ($main-max-width/2)),calc(100vw - ($main-max-width + $obs-width))), 100vw) 
            calc($main-max-width - $obs-width) 
            $obs-width 
            auto;
    }
    @include respond-above(md) {
        grid-template-columns: 
            clamp(calc(50vw - ($main-max-width/2)), min(calc(50vw - ($main-max-width/2)),calc(100vw - ($main-max-width + $obs-width))), 100vw) 
            $main-max-width
            $obs-width 
            auto;
    }
}