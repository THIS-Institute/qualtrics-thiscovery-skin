@use '../../v2.1.0/css/skin.scss';

// A map of breakpoints.
$breakpoints: (
  xs: 481px,
  sm: 768px,
  md: 980px,
  lg: 1400px,
);

//
//  RESPOND ABOVE
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include respond-above(sm) {}
@mixin respond-above($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.
  } @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

body {
    .curtain {
        #SkinContent {
            visibility: hidden !important;
        }
    }
    * {
        // outline: 1px dotted gray;
    }
}

/* Header, Footer externalisation etc */

.Skin  #HeaderContainer {
    display: none !important;
}

/* grid layout to help persistent panel - requires obs to be outside .JFEContent DOM, fixed, but follows an anchoring el */

$obs-width : 100px;
$main-max-width : 768px;

.JFEContent {
    display: grid;
    background-color: white;
    grid-template-columns: 0px auto 0rem 0px;
    > * {
        grid-column: 2 / 3;
    }
    > .thisco-obs-follow {
      grid-column: 3 / 4;
      > a {
        opacity: 0;
      }
    }
    @include respond-above(sm) {
        grid-template-columns: 
            clamp(calc(50vw - ($main-max-width/2)), min(calc(50vw - ($main-max-width/2)),calc(100vw - ($main-max-width + $obs-width))), 100vw) 
            calc($main-max-width - $obs-width) 
            $obs-width 
            auto;
    }
    @include respond-above(md) {
        grid-template-columns: 
            clamp(calc(50vw - ($main-max-width/2)), min(calc(50vw - ($main-max-width/2)),calc(100vw - ($main-max-width + $obs-width))), 100vw) 
            $main-max-width
            $obs-width 
            auto;
    }
}

#thiscoObs {
  // opacity: .75;
  position: fixed;
  top: 0px;
  width: $obs-width;
  height: 1000px;
  padding-top: calc(8.5rem + 2em);
  > .thisco-obs-content {
    min-height: 13rem;
    display: block;
    position: relative;
    &:before {
      opacity: .2;
      position: absolute;
      display: inline-block;
      background-image: 
        radial-gradient(circle at center, var(--thisco-pink) 64%, transparent 66%),
        linear-gradient(var(--thisco-pink), var(--thisco-pink)),
        radial-gradient(circle at center, var(--thisco-pink) 64%,  transparent 66%);
      content:" ";
      height: calc(100% + 1em);
      width: 5px;
      left:-10px;
      top:-.5em;
      background-repeat: no-repeat;
      background-position: center top, center, center bottom;
      background-size: 5px 5px,
        100% calc(100% - 5px),
        5px 5px;
    }
  }
}

table.ProgressBarContainer {

}